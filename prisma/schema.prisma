generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id           Int        @id @default(autoincrement())
  firstName    String     @db.VarChar(30)
  lastName     String     @db.VarChar(30)
  email        String     @unique(map: "email") @db.VarChar(100)
  hashPassword String     @db.VarChar(255)
  theme        String     @default("#4073FF") @db.VarChar(9)
  updated_at   DateTime   @default(now()) @db.Timestamp(0)
  created_at   DateTime   @default(now()) @db.Timestamp(0)
  labels       labels[]
  projects     projects[]
}

model labels {
  id         Int      @id @default(autoincrement())
  uid        Int
  name       String   @db.VarChar(20)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users      users    @relation(fields: [uid], references: [id], onUpdate: Restrict, map: "labels_ibfk_1")
  tasks      taskToLabel[] // New field using the intermediate table to establish the many-to-many relationship

  @@index([uid], map: "uid")
}

model projects {
  id         Int      @id @default(autoincrement())
  uid        Int
  name       String   @db.VarChar(40)
  color      String?  @default("#64748b") @db.VarChar(16)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users      users    @relation(fields: [uid], references: [id], onUpdate: Restrict, map: "projects_ibfk_1")
  tasks      tasks[]

  @@index([uid], map: "uid")
}

model tasks {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(40)
  description String    @default("") @db.TinyText
  completed   Boolean   @default(false)
  important   Boolean   @default(false)
  dueDate     DateTime  @db.Date @default(now())
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  created_at  DateTime  @default(now()) @db.Timestamp(0)
  labels      taskToLabel[]

  project     projects  @relation(fields: [pid], references: [id])
  pid         Int       @map("pid")
}

model taskToLabel {
  id       Int      @id @default(autoincrement())
  task     tasks    @relation(fields: [taskId], references: [id])
  taskId   Int
  label    labels   @relation(fields: [labelId], references: [id])
  labelId  Int

  @@index([taskId], map: "taskId")
  @@index([labelId], map: "labelId")

  @@unique([taskId, labelId])
}